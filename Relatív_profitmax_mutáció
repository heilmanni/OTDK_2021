```{r}
market=120 #piacok száma
n=6 #ennyien vannak egy piacon
p=matrix(runif(n*market, 1, 100), n, market)

dist=matrix(0, n, market)
aggdist=matrix(0, n+1, market)

for (m in 1:market)
{

    for (i in 1:n)
    {
      dist[i, m]=1
      aggdist[i+1, m]=aggdist[i, m]+dist[i, m]
    }

(aggdist[ ,m] = aggdist[ ,m]/aggdist[n+1, m])
    
}
```
```{r}
tav <- array(0, dim=c(n,n,m))
 for (m in 1:market)
 {
   for (i in 1:n)
    {
      for (j in 1:n)
      {
        a=abs(aggdist[i, m]-aggdist[j, m])
        tav[i, j, m]=min(a, 1-a)
      }
   }
  }
```
```{r}
prof <- function(tav)
{
for (m in 1:market)
{
  for (i in 1:n)
  {
    for (j in 1:n)
    {
      cost[i,j,m]=tav[i,j,m]*t+p[j,m]
    }
    
    if(cost[i,i, m] == min(cost[i, , m]))
      {
        for (k in 2:3)
        {
          j = order(cost[i, , m])[k]
          kozombos = (p[j, m] - p[i, m])/(2*t) + tav[i,j, m]/2
          demand[i, m] = demand[i, m] + kozom-bos  
        }
      }
    profit[i, m]=demand[i, m]*p[i, m] +0.0001
  }
}
  return(profit)
}
```
```{r}
rulett <- function(profit)
{
   aggprofit=matrix(0, n+1, market)
   szulok=matrix(0, n, market)  

  for (m in 1:market)
    {
      for (i in 1:n)
      {
        aggprofit[i+1, m]=aggprofit[i, m]+profit[i, m]
      }
    #megpörgetjük
      for (i in 1:n)
      {
        veletlen=runif(1, 0, aggprofit[n+1,m])
        szulok[i, m]=max(which(aggprofit[,m] < veletlen))
      }
  }
   return(szulok)
}
```
```{r}
nextp <- function(x,szulok) #x majd a p lesz
{
  for (m in 1:market)  
  {
    for (i in 1:n)
    {
      mut=rnorm(1, 0, 0.08)
      x[i, m]=max(0,min(p[szulok[i, m],m]+mut,100))
    }
  }
  return(x)
}
```

```{r}
nextpB <- function(x,szulok)
{
  for (m in 1:market)  
  {
    for (i in 1:n)
    {
      mut=rnorm(1, 0, 0.08)
      x[i, m]=max(0,min(p[szulok[i, m],m]+mut/(idoszak),100))
    }
  }
  return(x)
}
```

```{r}
demand=matrix(0, n, market)
profit=matrix(0, n, market)
t=50
cost= array(0, dim=c(n,n,market))

gen=100
genB=1000
historym <- array(0, dim = c(genB,n,market))

for (idoszak in 2:gen)
{
  profit=prof(tav)
  szulok=rulett(profit)
  p=nextp(p,szulok)
  p=matrix(sample(p, n*market, replace = F), n, market)
  
  historym[idoszak, , ] = p[n, market]
}

for (idoszak in (gen+1):genB)
{
  profit=prof(tav)
  szulok=rulett(profit)
  p=nextpB(p,szulok)
  p=matrix(sample(p, n*market, replace = F), n, market)
  
  historym[idoszak, , ] = p[n, market]
}

print("kész")
```


```{r}
plot(rowMeans(historym), type = "l")
  mean(historym) 
  plot(rowMeans(historym[0:15,,]), type = "l")
  plot(rowMeans(historym[0:gen, , ]), type = "l")
  plot(rowMeans(historym[(gen+1):genB, ,]), type = "l")
  plot(rowMeans(historym[50:genB, ,]), type = "l")
   plot(rowMeans(historym[500:genB, ,]), type = "l")
mean(historym[300:genB, , ])
```
```{r}
sd(historym[15:100, ,])
sd(historym[100:200, ,])
sd(historym[200:300, ,])
sd(historym[300:400, ,])
sd(historym[400:500, ,])
sd(historym[500:600, ,])
sd(historym[600:700, ,])
sd(historym[700:800, ,])
sd(historym[800:900, ,])
sd(historym[900:1000, ,])
```

```
